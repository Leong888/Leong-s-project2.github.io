export * from './hooks/useAreaBoundary';
export * from './hooks/useTrackAnimation';
export * from './hooks/usePoint';
export * from './hooks/useViewAnimation';
export * from './hooks/useIpLocation';
export * from './hooks/useBrowserLocation';
export * from './hooks/useAddressGeocoder';
export * from './hooks/usePointGeocoder';
import Map from './components/map/index.js';
export { default as Map } from './components/map/index.js';
import Control from './components/control/control/index.js';
export { default as Control } from './components/control/control/index.js';
import Scale from './components/control/scale/index.js';
export { default as Scale } from './components/control/scale/index.js';
import Zoom from './components/control/zoom/index.js';
export { default as Zoom } from './components/control/zoom/index.js';
import CityList from './components/control/city-list/index.js';
export { default as CityList } from './components/control/city-list/index.js';
import Location from './components/control/location/index.js';
export { default as Location } from './components/control/location/index.js';
import Copyright from './components/control/copyright/index.js';
export { default as Copyright } from './components/control/copyright/index.js';
import Navigation3d from './components/control/navigation3d/index.js';
export { default as Navigation3d } from './components/control/navigation3d/index.js';
import PanoramaControl from './components/control/panorama-control/index.js';
export { default as PanoramaControl } from './components/control/panorama-control/index.js';
import PanoramaCoverageLayer from './components/layer/panorama-coverage/index.js';
export { default as PanoramaCoverageLayer } from './components/layer/panorama-coverage/index.js';
import Marker from './components/overlay/marker/index.js';
export { default as Marker } from './components/overlay/marker/index.js';
import Marker3d from './components/overlay/marker3d/index.js';
export { default as Marker3d } from './components/overlay/marker3d/index.js';
import Label from './components/overlay/label/index.js';
export { default as Label } from './components/overlay/label/index.js';
import Polyline from './components/overlay/polyline/index.js';
export { default as Polyline } from './components/overlay/polyline/index.js';
import BezierCurve from './components/overlay/bezierCurve/index.js';
export { default as BezierCurve } from './components/overlay/bezierCurve/index.js';
import Polygon from './components/overlay/polygon/index.js';
export { default as Polygon } from './components/overlay/polygon/index.js';
import InfoWindow from './components/overlay/infowindow/index.js';
export { default as InfoWindow } from './components/overlay/infowindow/index.js';
import Circle from './components/overlay/circle/index.js';
export { default as Circle } from './components/overlay/circle/index.js';
import Prism from './components/overlay/prism/index.js';
export { default as Prism } from './components/overlay/prism/index.js';
import GroundOverlay from './components/overlay/ground-overlay/index.js';
export { default as GroundOverlay } from './components/overlay/ground-overlay/index.js';
import ContextMenu from './components/contextMenu/index.js';
export { default as ContextMenu } from './components/contextMenu/index.js';

// hooks
// import MapvglView from './components/layer/mapvgl-view/index.js'
const componentsList = [
    Map,
    Control,
    Scale,
    Zoom,
    Navigation3d,
    Marker,
    Marker3d,
    Copyright,
    Location,
    Label,
    Polyline,
    Polygon,
    BezierCurve,
    Circle,
    CityList,
    Prism,
    InfoWindow,
    ContextMenu,
    PanoramaControl,
    PanoramaCoverageLayer,
    GroundOverlay
    // MapvglView
];
// global register
const vue3BaiduMapGl = {
    install: (app, options) => {
        const { ak, plugins: p, pluginsSourceLink: psl } = options || {};
        const appProp = app.config.globalProperties;
        for (const component of componentsList) {
            const name = component.name;
            app.component(name, component);
            app.component(name.replace('B', ''), component);
        }
        ak && (appProp.$baiduMapAk = ak);
        p && (appProp.$baiduMapPlugins = p);
        psl && (appProp.$baiduMapPluginsSourceLink = psl);
    },
    version: '0.0.39'
};
// for umd
const install = vue3BaiduMapGl.install;
const version = vue3BaiduMapGl.version;

export { vue3BaiduMapGl as default, install, version };
